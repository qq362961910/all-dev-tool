<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>cn.t</groupId>
        <artifactId>all-dev-tool</artifactId>
        <version>${revision}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>net-proxy-tool</artifactId>
    <packaging>jar</packaging>

    <properties>
        <main-class>cn.t.tool.netproxytool.socks5.server.Socks5ProxyServer</main-class>
        <lib-dir>libs/</lib-dir>
        <output-dir>${project.build.directory}/${lib-dir}</output-dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>cn.t</groupId>
            <artifactId>netty-tool</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>net-proxy</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main-class}</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>${lib-dir}</classpathPrefix>
                            <!-- 如果不加这一句则依赖的SNAPSHOT的jar包就会表现为MANIFEST.MF中的
							Class-Path: lib/facede-user-1.0-20160512.093945-1.jar
							但是打包到../lib/facede-user-1.0-SNAPSHOT.jar下面包,这样就会出现找不到类的情况 -->
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${output-dir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
